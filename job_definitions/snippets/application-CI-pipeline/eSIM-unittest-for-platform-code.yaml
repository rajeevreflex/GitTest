- job-template:
    name: '{name}-eSIM-unittest-for-platform-code'
    parameters:
      - string:
          name: PIPELINE_NUMBER
          default: ""
          description: "The BUILD_NUMBER of first job in the pipeline"
      - string:
          name: APP_GIT_COMMIT
          default: ""
          description: "The git commit of the VFLEAP repository"
      - string:
          name: APP_GIT_BRANCH
          default: ""
          description: "The git branch of the VFLEAP repository"
      - string:
          name: PLATFORM_RELEASE_COMMIT_ID
          default: ""
          description: "The git commit of the latest release in the vfdo-esim-platform repository."
      - string:
          name: PLATFORM_RELEASE_BRANCH
          default: ""
          description: "The git branch/tag name of the latest release in the vfdo-esim-platform repository."
    project-type: freestyle
    defaults: global
    description: 'Do not edit this job through the web!'
    disabled: false
    display-name: 'Unit Tests for {name}'
    node: '{name}'
    properties:
      - build-discarder:
          days-to-keep: 365
          num-to-keep: 500
      - delivery-pipeline:
          stage: Unit Tests for plateform code
          task: Unit test for plateform code
    wrappers:
      - ansicolor
    scm:
      - '{platform_code_repository_type}':
          refspec: '{platform_code_repository_refspec}'
          url: '{platform_code_repository_uri}'
          branches:
            - ${{PLATFORM_RELEASE_BRANCH}}
          credentials-id: '{platform_code_repository_credentials}'
          git-config-name: '{platform_code_repository_display_name}'
          git-config-email: '{platform_code_repository_display_email}'
          timeout: 5
    builders:
      - shell: echo "======= Using NodeJS version -- $NODEJS_VERSION ======="
      - shell: echo "======= Commit -- $GIT_COMMIT ======="
      - shell: echo "======= Branch -- $GIT_BRANCH ======="
      - shell: !include-raw-escape: run-eSIM-unittest-for-plateform-code.sh

    publishers:
      - pipeline:
          #project: '{name}-provision-{initial_deployment_target}'
          project: '{name}-build-app-artefact'
          current-parameters: true
          predefined-parameters: ARTEFACT_VERSION=${{ARTEFACT_VERSION}}
